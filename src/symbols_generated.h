{0x001013c0, "gdt_encodeGdtEntry"},
{0x00101456, "gdt_gdt_c"},
{0x001015a0, "cpuid_init"},
{0x0010180e, "cpuid_get_feat"},
{0x00101842, "cpuid_supports_rdseed"},
{0x00101868, "num_to_str"},
{0x00101985, "unsigned_num_to_str"},
{0x00101a88, "add_event"},
{0x00101aef, "remove_event"},
{0x00101b1a, "trigger_event"},
{0x00101b6d, "pcspk_play_sound"},
{0x00101bf7, "pcspk_nosound"},
{0x00101c20, "beep"},
{0x00101c4b, "beep_at"},
{0x00101c74, "beep_for"},
{0x00101ca0, "beep_at_for"},
{0x00101cca, "console_move_cursor"},
{0x00101d08, "console_scroll_up"},
{0x00101e69, "console_handle_carriage_return"},
{0x00101e85, "console_handle_line_feed"},
{0x00101ed3, "console_handle_newline"},
{0x00101ee6, "console_set_color"},
{0x00101efe, "console_update_cursor"},
{0x00101f7d, "console_advance_cursor"},
{0x00101ff2, "putchar"},
{0x001020a6, "print"},
{0x001020df, "console_init"},
{0x001020f4, "console_clear_screen"},
{0x00102148, "put_char_at"},
{0x001021a3, "put_color_at"},
{0x00102200, "get_char_at"},
{0x00102251, "get_color_at"},
{0x001022a4, "klog_prefix"},
{0x0010247c, "klog"},
{0x0010252d, "klogf"},
{0x00102614, "outb"},
{0x00102633, "inb"},
{0x00102650, "outw"},
{0x00102671, "inw"},
{0x00102690, "io_wait"},
{0x001026a5, "_panic_print_hex"},
{0x0010276b, "lookup_symbol"},
{0x001027d7, "panic_panic"},
{0x00102add, "k_heapBMInit"},
{0x00102aec, "k_heapBMAddBlock"},
{0x00102c03, "k_heapBMAlloc"},
{0x00102dfc, "k_heapBMFree"},
{0x00102edd, "heap_malloc"},
{0x00102ef2, "heap_calloc"},
{0x00102f1e, "heap_free"},
{0x00102f34, "heap_init"},
{0x00102fb7, "_kmalloc"},
{0x00102fee, "PIC_sendEOI"},
{0x00103024, "PIC_remap"},
{0x0010312d, "pic_init"},
{0x0010316f, "IRQ_set_mask"},
{0x001031d5, "IRQ_clear_mask"},
{0x0010323d, "strcpy"},
{0x00103273, "strncpy"},
{0x001032b3, "strcat"},
{0x001032f9, "strdup"},
{0x00103347, "strndup"},
{0x001033a6, "strlen"},
{0x001033cc, "strcmp"},
{0x0010344e, "strncmp"},
{0x001034e7, "strchr"},
{0x00103514, "strrchr"},
{0x0010354a, "strspn"},
{0x0010358e, "strcspn"},
{0x001035d2, "strpbrk"},
{0x0010360a, "strstr"},
{0x00103647, "strtok"},
{0x001036d2, "memchr"},
{0x00103708, "memcmp"},
{0x00103763, "memset"},
{0x0010378e, "memcpy"},
{0x001037c4, "memmove"},
{0x0010382f, "memccpy"},
{0x00103884, "time_interrupt"},
{0x001038b8, "time_init"},
{0x00103955, "sleep"},
{0x0010397f, "rand_lcg"},
{0x001039c5, "rand_init"},
{0x00103a52, "rand_in_range"},
{0x00103a94, "serial_init"},
{0x00103be6, "serial_print_char"},
{0x00103c44, "serial_flush"},
{0x00103c69, "serial_print"},
{0x00103cad, "_serial_out_char"},
{0x00105404, "printf_"},
{0x00105435, "sprintf_"},
{0x00105465, "snprintf_"},
{0x00105496, "vprintf_"},
{0x001054ba, "vsnprintf_"},
{0x001054de, "fctprintf"},
{0x0010551b, "_putchar"},
{0x0010553a, "sys_info_gather"},
{0x0010579c, "_ps2_print_device"},
{0x001057e9, "ps2_detect_devices"},
{0x001058f0, "ps2_device_send_command"},
{0x00105943, "ps2_device_send_command_with_argument"},
{0x00105988, "ps2_device_send_command_with_output"},
{0x001059c6, "ps2_device_send_command_with_output_and_argument"},
{0x00105a0f, "ps2_device_read"},
{0x00105a34, "controller_read_status"},
{0x00105a7d, "controller_send_command"},
{0x00105aa3, "controller_send_command_with_argument"},
{0x00105ae6, "controller_send_command_with_output"},
{0x00105b1d, "controller_send_command_with_output_and_argument"},
{0x00105b71, "controller_read_configuration_byte"},
{0x00105b86, "controller_write_configuration_byte"},
{0x00105ba7, "ps2_controller_init"},
{0x00105fd6, "ps2_restart_system"},
{0x0010605f, "flip_case"},
{0x001060fb, "has_key"},
{0x00106339, "getch"},
{0x00106387, "ps2_keyboard_flush"},
{0x00106399, "ps2_keyboard_init"},
{0x00106490, "interrupt_stub"},
{0x00106496, "interrupt_handler"},
{0x001064b2, "idt_set_descriptor"},
{0x0010650a, "attach_interrupt"},
{0x00106527, "idt_init"},
{0x001065fa, "exception"},
{0x001066d6, "exception_handlers_init"},
{0x00106744, "call_global_constructors"},
{0x00106786, "kernel_main"},
{0x00106840, "start"},
{0x00106880, "_cpuid_check"},
{0x001068b0, "panic_save_regs"},
{0x001068e0, "init_PIT"},
{0x00106de0, "interrupt_stub_table"},
{0x00106ef1, "app_menu(tui::Menu*)"},
{0x00107056, "user_main"},
{0x00107152, "__cxa_pure_virtual"},
{0x00107174, "__cxa_guard_acquire"},
{0x00107187, "__cxa_guard_release"},
{0x00107193, "__cxa_guard_abort"},
{0x00107199, "operator new(unsigned long)"},
{0x001071af, "operator new[](unsigned long)"},
{0x001071c5, "operator delete(void*)"},
{0x001071dc, "operator delete[](void*)"},
{0x001071f3, "operator delete(void*, unsigned long)"},
{0x0010720a, "operator delete[](void*, unsigned long)"},
{0x00107221, "__cxa_finalize"},
{0x00107227, "__cxa_atexit"},
{0x00107231, "__cxa_throw"},
{0x00107253, "__cxa_begin_catch"},
{0x00107275, "__cxa_end_catch"},
{0x00107297, "std::rand()"},
{0x001072a6, "std::string::string()"},
{0x001072a6, "std::string::string()"},
{0x001072ca, "std::string::string(char const*)"},
{0x001072ca, "std::string::string(char const*)"},
{0x00107322, "std::string::string(std::string const&)"},
{0x00107322, "std::string::string(std::string const&)"},
{0x00107372, "std::string::~string()"},
{0x00107372, "std::string::~string()"},
{0x00107396, "std::string::operator=(std::string const&)"},
{0x0010740a, "std::string::c_str() const"},
{0x00107424, "std::string::length() const"},
{0x00107430, "std::string::empty() const"},
{0x00107440, "std::string::operator+(std::string const&) const"},
{0x001074e2, "std::string::operator+=(std::string const&)"},
{0x00107524, "std::string::operator char*()"},
{0x0010753e, "std::string::operator char const*() const"},
{0x00107558, "std::get_time_ms()"},
{0x00107562, "std::sleep(unsigned int)"},
{0x00107634, "tui::open_menu(tui::MenuContext*, tui::Menu*, tui::GenericPoint<int>, tui::GenericSize<int>, unsigned int)"},
{0x001076d9, "tui::draw_menu(tui::MenuContext*)"},
{0x00107889, "tui::get_menu(tui::MenuContext*)"},
{0x001078a4, "tui::close_menu(tui::MenuContext*)"},
{0x001078e6, "tui::menu_block(tui::Menu*, tui::GenericPoint<int>, tui::GenericSize<int>, unsigned int)"},
{0x00107966, "tui::box_chars(tui::GenericPoint<int>, tui::GenericSize<int>)"},
{0x00107a68, "tui::box(tui::GenericPoint<int>, tui::GenericSize<int>, unsigned char, unsigned char, char)"},
{0x00107ac6, "tui::dbox_chars(tui::GenericPoint<int>, tui::GenericSize<int>)"},
{0x00107bc8, "tui::dbox(tui::GenericPoint<int>, tui::GenericSize<int>, unsigned char, unsigned char, char)"},
{0x00107c26, "tui::copy(unsigned char*, tui::GenericPoint<int>, tui::GenericSize<int>)"},
{0x00107cde, "tui::paste(unsigned char*, tui::GenericPoint<int>, tui::GenericSize<int>)"},
{0x00107da1, "tui::fill_character(tui::GenericPoint<int>, tui::GenericSize<int>, char)"},
{0x00107e03, "tui::fill_color(tui::GenericPoint<int>, tui::GenericSize<int>, char)"},
{0x00107e65, "tui::fill(tui::GenericPoint<int>, tui::GenericSize<int>, char, char)"},
{0x00107f00, "__udivdi3"},
{0x00108020, "__umoddi3"},
{0, ""}
